@model MyEshop.DomainClass.Product
@using MyEshop.DomainClass
@using MyEshop.Business

@{
    ViewBag.Title = "افزودن محصول";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<h2 style="padding-top:10px;">افزودن محصول</h2>
<hr />

<div class="row">
    @using (Html.BeginForm())
    {
        <div class="col-md-8">
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.BrandId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("BrandId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductTitle, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductCount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductCount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductCount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsExist, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsExist)
                            @Html.ValidationMessageFor(model => model.IsExist, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="ثبت محصول" class="btn btn-success" />
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    تصویر محصول
                </div>
                <div class="panel-body">
                    <img src="@(PathTools.NoPhoto)" alt="your image" class="thumbnail" id="ProductImage" />

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductImageName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" name="ProductImage" id="ProductImageInput" />
                            @Html.ValidationMessageFor(model => model.ProductImageName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-primary">
                <div class="panel-heading">
                    انتخاب گروه
                </div>
                <div class="panel-body">
                    @{
                        List<ProductGroup> groups = ViewBag.Groups;
                        <ul>
                            @foreach (ProductGroup mainGroup in groups.Where(g => g.ParentID == null))
                            {
                                <li>
                                    <input type="checkbox" name="selectedGroups" value="@mainGroup.GroupID" /> <span>@mainGroup.GroupTitle</span>
                                    @if (mainGroup.ProductGroups.Any())
                                    {
                                        <ul>
                                            @foreach (ProductGroup subGroup in groups.Where(s => s.ParentID == mainGroup.GroupID))
                                            {
                                                <li>
                                                    <input type="checkbox" name="selectedGroups" value="@subGroup.GroupID" /> <span>@subGroup.GroupTitle</span>
                                                </li>
                                            }
                                        </ul>
                                    }
                                </li>
                            }
                        </ul>
                    }
                </div>
            </div>
        </div>
    }
</div>
<hr />

<div>
    <a href="@Url.Action("Index","ManageProducts")" class="btn btn-primary">بازگشت به لیست</a>
</div>


@section Scripts{
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <script src="~/Upload/EditorUpload/ckeditor/ckeditor.js"></script>
    <script src="~/Upload/EditorUpload/ckeditor/adapters/jquery.js"></script>
    <script>
        $(function () {
            $('#Text').ckeditor();
        });
    </script>
}